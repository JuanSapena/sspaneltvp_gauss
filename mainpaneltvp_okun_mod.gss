////////////////////////////////////////////////////////////////////////////////
// 				PANELTVP                                                      //
// APTECH GAUSS code to perform calculation of Time-Varying-Parameter models  //
//                      for Time Series Panel data                            //
////////////////////////////////////////////////////////////////////////////////

/* 
As performed in:
Camarero, M., Sapena, J., & Tamarit, C. (2023). 
Introducing sspaneltvp: a code to estimating state-space time varying parameter models in panels.
An application to Okun's law. Submitted to Studies in Nonlinear Dynamics and Econometrics. 
by Juan Sapena (juan.sapena@ucv.es)  
*/

/* 	This Draft : JULY 31, 2023  */

new;

//library optmum, pgraphtranslate;
library optmt, optmum, pgraph;

graphset;

// Specify whether to use optmt or optmum
__opt_mt = 1;


/* ======================================================================= */
/* Creates a short project identifier using the variable proj              */

proj="okun";

outfile = proj$+"_output"$+".txt";
output file = outfile reset;

inputdatafile = "/data/"$+proj$+"_data"$+".xlsx";

/*
cellid = xlsMakeRange(row, col);
*/

/* ======================================================================= */
/* Replace this first section with a section to read in your data          */

////////////////////////////////////////////////////////////////
// FIRST SPECIFY MAIN ELEMENTS FOR THE MODEL FROM THE CONSOLE //
////////////////////////////////////////////////////////////////

// #include consolepaneltvp.gss;

//////////////////////////////////////////
// THEN READ DATA FROM INPUT EXCEL FILE //
//////////////////////////////////////////

#include xlsreadpaneldata.gss;

////////////////////////////////////////////////
// DEFINE THE VARIABLES TO BE POTENTIALLY USED//
////////////////////////////////////////////////

/* GENERATE PERIODS AND INTERCEPT */

INTERCEPT = ones(capt,n);

tempo = period;

//ind = seqa(2000.25,1/12,capt); @ an alternative way  @

/* GENERATE A DETERMINISTIC TREND FOR THE PANEL */

trendcol = seqa(1,1,capt);
trend = trendcol + zeros(capt,n);

x0 = intercept;

//////////////////////////////////////////////////////////////

//#include newvar_okun.gss;

//////////////////////////////////////////////////////////////

OILG=LOG(OIL./OIL_LAG);
OIL_LOG=LOG(OIL);
OILLAG_LOG=LOG(OIL_LAG);

URATE_GAP = URATE-NAWRU;

RGDPG_VAR=RGDPG-RGDPG_LAG;

//////////////////////////////////////////////////////////////
// CODE TO SPLIT POSITIVE AND NEGATIVE VALUES OF A VARIABLE //
//////////////////////////////////////////////////////////////

// NOTE 1 TO ERIC CLOWER
// I have uncommented out the file "datasplitnegpos.gss"
// that splits a series into two new series:
// NEGATIVE VALUES TO ZERO, and
// ZERO TO POSITIVE VALUES of a variable, and,
// in general, deviations from any pre-defined threshold level (i.e. zero)
 
#include datasplitnegpos.gss;

//////////////////////////
//  MODEL SPECIFICATION //
//////////////////////////

// NOTE 2 TO ERIC CLOWER
// I have adapted the Model Specification to the model in the manuscript attached

// HERE THE DEPENDENT VECTOR. Candidates: URATE_DIF ///

    y = URATE_DIF;

// HERE THE MEASUREMENT INDEPENDENTS WITH IDIOSYNCRATIC MEAN (FIXED) PARAMETER

    //  measdep = RGDPG;
  	measdep = INTERCEPT;

// HERE THE MEASUREMENT INDEPENDENTS WITH COMMON MEAN (FIXED) PARAMETER

    //  measdepc = INTERCEPT;
	measdepc = RGDPG;

// HERE THE MEASUREMENT INDEPENDENTS WITH UNOBSERVED (VARYING) PARAMETER

    measdepv = RGDPG;

// HERE THE IDIOSYNCRATIC-PARAMETER CONTROL VARIABLES IN STATE EQUATION
// BAAFFM BAA10YM
    
    //  statedep = RGDPG_VAR;
	statedep = URATE_GAP_POS;

// HERE THE COMMON-PARAMETER CONTROL VARIABLES IN STATE EQUATION

    //  statedepc = URATE_GAP;
	statedepc = RGDPG_VAR_POS~RGDPG_VAR_NEG;

/////////////////////////////////////////////
//  PREPARES DATA (IDIOSYNCRATIC) FOR PLOT //
/////////////////////////////////////////////

DATATOPLOT = RGDPG~URATE~URATE_DIF~NAWRU~NAWRU_DIF;
seriesnum = cols(DATATOPLOT)/n;

serieslab1="Real GDP growth ";
serieslab2="Unemployment Ratio ";
serieslab3="Unemployment ratio variation, % ";
serieslab4="NAWRU ";
serieslab5="NAWRU variation ";

datatoplotlab = serieslab1$~serieslab2$~serieslab3$~serieslab4$~serieslab5;

//////////////////////////////////////
//  PREPARES DATA (COMMON) FOR PLOT //
//////////////////////////////////////

DATATOPLOT2 = BAA10YM;
series2num = cols(DATATOPLOT2)/n;

series2lab1 = "BAA spread ";

datatoplot2lab = series2lab1;

///////////////////////////////////////
//  GENERATES DATA FILE FOR PUR TEST //
///////////////////////////////////////

if __opt_mt;
 #include kfseekpaneltvp_mod.gss;
else;
 #include kfseekpaneltvp.gss;
endif;

#include gen_purinputdata_okun.gss;


